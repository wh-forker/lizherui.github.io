<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>lizherui的程序世界</title><link href="http://www.lizherui.com/" rel="alternate"></link><link href="http://www.lizherui.com/feeds/life.atom.xml" rel="self"></link><id>http://www.lizherui.com/</id><updated>2015-12-19T00:00:00+08:00</updated><entry><title>2015总结</title><link href="http://www.lizherui.com/pages/2015/12/19/2015_summary.html" rel="alternate"></link><updated>2015-12-19T00:00:00+08:00</updated><author><name>lizherui</name></author><id>tag:www.lizherui.com,2015-12-19:pages/2015/12/19/2015_summary.html</id><summary type="html">&lt;h2&gt;工作&lt;/h2&gt;
&lt;p&gt;今年5月份参加第一次晋升，顺利地升到了P6。&lt;/p&gt;
&lt;p&gt;晋升之前也就是工作第一年，大部分时间都在做业务需求。晋升之后也就是工作第二年，几乎不碰业务了，开始做底层技术框架、性能提升、稳定性改造这类技术性的工作。&lt;/p&gt;
&lt;p&gt;说实话我和很多程序员一样，不喜欢天天做业务，甚至很反感。因为第一做业务的技术含量普遍偏低；第二做业务个人很难沉淀出高价值且移植性高的东西；第三做业务需要经常和产品经理撕逼，浪费时间，烦。&lt;/p&gt;
&lt;p&gt;之前做业务不需要费很多脑筋，产品经理把需要做的功能点都细化了出来，挨个儿照着实现就行了，而且绝大部分功能点都不需要很难的技术。&lt;/p&gt;
&lt;p&gt;因此刚开始做技术性的工作时感觉很茫然，没人告诉我将要重构的底层技术框架具体长什么样、哪些地方需要进行性能优化、稳定性改造又是什么鸟等等。我必须得自己主动去发掘需求点，相当于把产品经理的活儿也给干了。除此之外技术性的工作还难在抽象程度比较高，又需要长时间的深度思考，常常需要一个月才能出技术方案，不像做业务很快就能把技术方案给定了。&lt;/p&gt;
&lt;p&gt;安安静静做了一年技术性工作让我感觉很开心、很充实，肚子里终于有点儿干货了，翅膀也逐渐硬了起来。因为不像做业务那样经常有产品经理指着开发脑门吼“今晚必须发布”，所以几乎也不加班了。&lt;/p&gt;
&lt;p&gt;年初的时候组里招来一个北京土著，高中文化，一副吊儿郎当小混混的模样，没想到技术那么牛逼。&lt;/p&gt;
&lt;p&gt;这哥们家里不差钱，高中毕业后没事干天天混社会、玩越野。混了几年后被他爸强制丢到一个小公司的市场部打发时间，没想到这哥们居然对隔壁技术部的工作产生了浓厚的兴趣，而且一发不可收拾。&lt;/p&gt;
&lt;p&gt;因此我反正认为这哥们干这行完全是兴趣驱动的，他的技术让全组人佩服，并且拿到了整个大部门年度最佳新人奖。&lt;/p&gt;
&lt;p&gt;说了半天，他的技术究竟厉害在哪儿呢？&lt;/p&gt;
&lt;p&gt;更高层次的抽象以及配套的思维能力。&lt;/p&gt;
&lt;p&gt;他总是能从更高层次的抽象去落地一个底层技术框架，别人跟他讨论的时候一下子很难理解他在说什么。一个技术框架不仅抽象程度高，而且信息量非常大。而他不仅能把这么大信息量的方方面面理得清清楚楚，甚至能把每个模块的细节都清晰完整地勾勒出来，整个框架就有血有肉、立体式得摆在他脑袋里一样。&lt;/p&gt;
&lt;p&gt;这哥们干活儿有个特点，非常专注，每次喊他都要喊好几声。&lt;/p&gt;
&lt;p&gt;以前我做业务时有个坏习惯，喜欢把什么qq、微信、旺旺、邮件、微博、网易新闻之类的都开着，写一会儿代码就聊一会儿qq或者刷个微博啥的。但现在做技术性工作很依赖长时间持续的深度思考，最怕被打断，于是把这些可能会打断思考的软件都关了。我觉着这是个好习惯，况且绝大部分新消息都是垃圾信息，也不需要及时回复。&lt;/p&gt;
&lt;p&gt;但仍然很难长时间持续的深度思考，很容易分心，思考了没多久就不由自主地去刷个知乎，或者思绪不知不觉就飘到今晚吃啥这个问题上了。浮躁，静不下心，有点儿像马路上的狗狗，东张西望，突然就跑开追路边一个什么东西去了。&lt;/p&gt;
&lt;p&gt;冥想，以前我觉得这种事很傻逼，现在觉得确实有那么点儿用。天天练天天练，比以前能静下心来了，更容易专注。以前写这么长一篇文章的过程中起码得走神刷10几次知乎微博，现在能从头到尾专注地思考并写下来。&lt;/p&gt;
&lt;h2&gt;灰产&lt;/h2&gt;
&lt;p&gt;如果说要评选2015年最有影响力的移动app，我一定投票给某打车软件-“哟波”。&lt;/p&gt;
&lt;p&gt;哟波刚进入国内那会儿，很多人老老实实拉活儿就能挣不少。&lt;/p&gt;
&lt;p&gt;想增加收入就得多拉活儿，但这样增加的收入只能量变，不能质变。&lt;/p&gt;
&lt;p&gt;很快就有人想出了质变的办法，把一件体力活儿彻底上升为脑力活儿。&lt;/p&gt;
&lt;p&gt;4月份的时候媒体开始曝光很多哟波刷单者一个月收入4-5万，抛开专业工作室不谈，那会儿一个普通水平的兼职刷单者就能轻松达到这个数字。&lt;/p&gt;
&lt;p&gt;几乎没有任何成本，天天躺在床上，拿几个手机偶尔点点，就能不断刷，甚至不需要买很多手机，在电脑里多开安卓模拟器就行。&lt;/p&gt;
&lt;p&gt;刷哟波的人越来越多，导致很多人胆子越来越大，从推荐费到券单，从券单到高额长途欠费单，从一个司机账号到上百个司机账号，从真跑到虚拟行驶，各种手法层出不穷。&lt;/p&gt;
&lt;p&gt;如果刷的人少，我相信一万块都没几个人敢刷。但如果刷的人多了起来，性质就不一样了，甭说一万了，上百万都有人敢刷。&lt;/p&gt;
&lt;p&gt;媒体曝光后似乎哟波就重视了起来，开始出招儿。但是魔高一尺道高一丈，刷单的也不是省油的灯，斗来斗去一直持续到10月底手机号实名制导致大量接码平台关闭，才基本稳了下来。&lt;/p&gt;
&lt;p&gt;这期间哟波出了哪些反作弊的妙招儿与昏招儿，刷单的那些人又是怎么破解和应对的，那真是相当精彩，足足可以写一本书了。&lt;/p&gt;
&lt;p&gt;总之，当一件新鲜科技事物刚冒出来的时候，由于设计上不成熟，监管又没跟上，很容易让胆大聪明的人钻空子赚上一笔，尤其是O2O。&lt;/p&gt;
&lt;p&gt;虽然这种事并不值得提倡，毕竟见不得光，甚至触犯了法律。&lt;/p&gt;
&lt;h2&gt;车子&lt;/h2&gt;
&lt;p&gt;320i开了一年多，我觉得在城里开开动力够用了，想激情一把就切S档瞎开呗。&lt;/p&gt;
&lt;p&gt;3月份的时候几乎每周自驾游，走高速。&lt;/p&gt;
&lt;p&gt;刚开始上高速那会儿120码变道总觉得虚，方向有点儿松，而且底盘不怎么稳。后来有次偶然在高速上切了Sport模式后突然发现，这Sport模式就是为高速而生的阿！方向变紧、底盘变稳，高速上开着有信心多了。&lt;/p&gt;
&lt;p&gt;有了信心就容易装逼，江浙的高速路况又好，于是就开始超速，过了摄像头就开到140-150码，再往上也能开，但是太吵。&lt;/p&gt;
&lt;p&gt;那次印象很深，从西塘回杭州在申嘉湖高速上一个岔路口，一个小车从最右边辅道并进第二车道的时候似乎是速度太慢了，后面的半挂车为了避让它突然往左打方向，而我当时正在第一车道里140码的速度超半挂车，刹不住了，本能地往左打方向，几乎是贴着左护栏过去了。&lt;/p&gt;
&lt;p&gt;当时就吓坏了，副驾的女朋友也骂了我一路。从此不怎么超速了，至少超大车时不敢超速了。&lt;/p&gt;
&lt;p&gt;至于下一辆车，口水cls或A7，反正目前买不起。&lt;/p&gt;
&lt;h2&gt;房子&lt;/h2&gt;
&lt;p&gt;今年把车贷提前还清后，又存了点儿钱，由于杭州房子不算很贵，差不多够首付了，过个年回来必须得买了。&lt;/p&gt;
&lt;p&gt;目前对买房子完全不懂，需要开始研究下了。&lt;/p&gt;
&lt;h2&gt;感情&lt;/h2&gt;
&lt;p&gt;女朋友处了一年多，还行吧，有时会为鸡毛蒜皮的事情吵架。&lt;/p&gt;
&lt;p&gt;也许明年能领证，也许吧。&lt;/p&gt;
&lt;h2&gt;展望&lt;/h2&gt;
&lt;p&gt;在工作上有更深的研究和更高的突破，赚更多的钱，买大房子，开更好的车。&lt;/p&gt;</summary><category term="2015"></category></entry><entry><title>2014总结</title><link href="http://www.lizherui.com/pages/2014/12/21/2014_summary.html" rel="alternate"></link><updated>2014-12-21T00:00:00+08:00</updated><author><name>lizherui</name></author><id>tag:www.lizherui.com,2014-12-21:pages/2014/12/21/2014_summary.html</id><summary type="html">&lt;p&gt;这是收获颇丰的一年。&lt;/p&gt;
&lt;p&gt;如果说去年的主要收获是一个大offer的话，那么今年的主要收获就是车子和妹子了。&lt;/p&gt;
&lt;h2&gt;车子&lt;/h2&gt;
&lt;p&gt;买车的想法从年后滋生，并开始花大量时间泡在汽车之家上，混了几个月终于从一个连BMW几系都分不清的汽车白痴到了入门级别。 &lt;/p&gt;
&lt;p&gt;5月份参加了杭州限牌后第一次摇号，摇中。 &lt;/p&gt;
&lt;p&gt;然后在Mercedes C200L、BMW 320i、Audi A4L之间纠结了很久，最终选了BMW 320i。 &lt;/p&gt;
&lt;h2&gt;妹子&lt;/h2&gt;
&lt;p&gt;遇到了一位不错的妹子，浙江本地人，家里正好是开修理厂的，车子刮擦了都去她家里修。 &lt;/p&gt;
&lt;p&gt;感情非常好，同居很幸福。 &lt;/p&gt;
&lt;h2&gt;手表&lt;/h2&gt;
&lt;p&gt;年底的时候给自己买了块浪琴，戴着很满意。 &lt;/p&gt;
&lt;h2&gt;工作&lt;/h2&gt;
&lt;p&gt;最大的收获是有了股票，数量不多，刚刚好。 &lt;/p&gt;
&lt;p&gt;今年在工作和技术上没有去年拼了，书看得少了，开源项目就搞了个python重写git。 &lt;/p&gt;
&lt;p&gt;明年除了房子，应该没别的事情了，需要把更多的时间放回到代码上。  &lt;/p&gt;
&lt;h2&gt;感受&lt;/h2&gt;
&lt;p&gt;要更努力地赚钱，争取早日买房子，开更好的车。&lt;/p&gt;</summary><category term="2014"></category></entry><entry><title>回归城市生活</title><link href="http://www.lizherui.com/pages/2014/11/24/back_to_city_life.html" rel="alternate"></link><updated>2014-11-24T00:00:00+08:00</updated><author><name>lizherui</name></author><id>tag:www.lizherui.com,2014-11-24:pages/2014/11/24/back_to_city_life.html</id><summary type="html">&lt;p&gt;去年这个时候，公司从城里搬到了郊区。&lt;/p&gt;
&lt;p&gt;那个时候我只能骑自行车上下班，因此被迫搬到了离公司较近的&lt;em&gt;乡下&lt;/em&gt;小区。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;乡下&lt;/em&gt;小区泛指郊区的小区，地段偏远、条件清苦、娱乐极少，除了距离公司较近，没有任何优势。&lt;/p&gt;
&lt;p&gt;那里住的阿里人，不是实习生，就是应届生。&lt;/p&gt;
&lt;p&gt;这让我一直很费解：全杭州应届生里平均收入最高的阿里人，齐刷刷地在乡下住着简陋的廉租房，而绝大部分收入平平的应届生，却租住在各种高大上的城市楼盘里。&lt;/p&gt;
&lt;p&gt;我和两个收入在社会平均线左右的应届生合租了整整一年。换句话说，我观察了他俩整整一年。因为他俩代表着国内应届生最普遍的生存状况-微薄的薪水、初入社会的小心翼翼、长年累月的单身生活、习惯性随大流的性格等等。&lt;/p&gt;
&lt;p&gt;大三的时候，我还在中华英才网实习，那时候我看到的正式员工也是这个状况。我爸得知我放弃考研直接工作的打算后，也是这样骂我的：你难道只想毕业后拿个几千块钱薪水，像那些人一样？能不能有点出息？&lt;/p&gt;
&lt;p&gt;我当然不想和那些人一样。&lt;/p&gt;
&lt;p&gt;这几年来，通过不断地观察别人和自身实践，我逐渐发现，这个问题唯一的解决办法就是-&lt;strong&gt;不断逆着本能&lt;/strong&gt;，即&lt;strong&gt;contradict our intuitions&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;逆着本能&lt;/strong&gt;，无论是思想上还是行为上，都是一件很痛苦的事情，而且这需要时间、需要耐心。&lt;/p&gt;
&lt;p&gt;但回报是显而易见的，现在终于有点儿城市生活的样子了：和女友住在繁华的城西银泰旁、开宝马车上下班、平时买买菜做做饭、偶尔吃吃高大上的餐厅、周末兜兜风购购物。&lt;/p&gt;
&lt;p&gt;始终逆着本能做事，不随着大流走，才可能有希望。&lt;/p&gt;
&lt;p&gt;否则，很可能和那俩哥们，和所谓的大部分人一样，一年又一年过去了，仍然毫无起色。&lt;/p&gt;</summary><category term="city"></category></entry><entry><title>写在开学季：对待学校生活的态度</title><link href="http://www.lizherui.com/pages/2014/09/06/attitude_to_school_life.html" rel="alternate"></link><updated>2014-09-06T00:00:00+08:00</updated><author><name>lizherui</name></author><id>tag:www.lizherui.com,2014-09-06:pages/2014/09/06/attitude_to_school_life.html</id><summary type="html">&lt;p&gt;这几天，公司对面的大学突然热闹了起来，稚气的学生和忙碌的家长，络绎不绝。&lt;/p&gt;
&lt;p&gt;原来是开学了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;开学&lt;/strong&gt;，多么熟悉的字眼，却第一次与我无关。&lt;/p&gt;
&lt;p&gt;忙里偷闲的时候，我会站在落地窗旁看看他们，回想下去年这个时候的自己，满满都是学校生活。&lt;/p&gt;
&lt;p&gt;没错，学校生活。&lt;/p&gt;
&lt;p&gt;我也毕业一年了，我想虽然每个毕业生对学校生活的态度见仁见智，但有一点应该众口一词：&lt;strong&gt;怀念&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;为什么是怀念？&lt;/p&gt;
&lt;p&gt;因为社会与学校真的是太不一样了，尤其是观念。&lt;/p&gt;
&lt;p&gt;绝大部分刚毕业的年轻人，没钱。在学校里，这并不算什么严重的问题，甚至算不上问题，但出了校门，立马成为了头等问题。&lt;/p&gt;
&lt;p&gt;毕业这一年给我最深的感触就是，你有多少钱决定了别人对你的看法和态度。没钱意味着处处被鄙视、被嘲笑。&lt;/p&gt;
&lt;p&gt;我去奥迪4s店看车的时候，第一次去4s店没什么经验，蹬着一辆破自行车停到奥迪4s店门口，穿着裤衩拖鞋刚进门就被前台小妹拦住了：先生，请问你找谁？&lt;/p&gt;
&lt;p&gt;我说我不找谁，我来看看车。&lt;/p&gt;
&lt;p&gt;前台小妹满脸“穷逼你买得起吗”的表情，冷冷地丢了句“看车在那边”，就低头不理我了，连销售都没给我安排。&lt;/p&gt;
&lt;p&gt;我想类似的场景很多年轻人都经历过，这就是一个看钱的时代。&lt;/p&gt;
&lt;p&gt;意识到这一点后，绝大部分刚毕业的年轻人会感到很难过，一些脾气不好的年轻人于是开始抱怨、抨击社会这种向钱看的风气。&lt;/p&gt;
&lt;p&gt;这个时候大家就会自然而然地开始怀念学校生活，怀念那种与钱无关的平等氛围、怀念那种纯洁无暇的同学关系。&lt;/p&gt;
&lt;p&gt;但是，请适可而止，仅仅停留在&lt;strong&gt;怀念&lt;/strong&gt;的层面就好，因为学校生活里提倡、流行的那些东西并不能解决社会生活中的问题，甚至会起反作用，比如心灵鸡汤，比如道德争论，比如坚持梦想。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;怀念学校生活，却并不愿真正回去，这就是我的态度。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;刚毕业步入社会时，没钱，处处被鄙视，那就低下长年高昂的头颅，放下自以为是的清高。&lt;/p&gt;
&lt;p&gt;起步的艰难时期确实难熬，但绝大部分人都是这样，没钱就拼聪明 + 勤奋，被鄙视就先忍着。&lt;/p&gt;
&lt;p&gt;这需要时间、需要耐心，慢慢才会好起来。&lt;/p&gt;
&lt;p&gt;现在，虽然我仍会经常梦到学校生活，但我知道已经回不去了。&lt;/p&gt;
&lt;p&gt;我也不愿回去。&lt;/p&gt;</summary><category term="school"></category></entry><entry><title>bmw提车记</title><link href="http://www.lizherui.com/pages/2014/08/25/got_bmw.html" rel="alternate"></link><updated>2014-08-25T00:00:00+08:00</updated><author><name>lizherui</name></author><id>tag:www.lizherui.com,2014-08-25:pages/2014/08/25/got_bmw.html</id><summary type="html">&lt;p&gt;小时候，老师和家长总是说：“你们只有好好学习，长大后才能坐奔驰、开宝马。”&lt;/p&gt;
&lt;p&gt;于是，开宝马，就自然而然地成为了一个小小的梦想。&lt;/p&gt;
&lt;p&gt;如今本科毕业一年了，我实现了它，尽管我在大学里从未好好学习，成绩一直很差，也从未有哪个研究生导师瞧得上我。&lt;/p&gt;
&lt;p&gt;当我们还不具备实现某个梦想的能力时，会一直处于激动、鸡血的状态，觉得能实现这个梦想的那群人很不可思议。&lt;/p&gt;
&lt;p&gt;但是当我们终于具备了实现这个梦想的能力，成为那群人中的一份子时，之前那种不可思议的感觉，一点儿也没有了。&lt;/p&gt;
&lt;p&gt;而且，再也不会有了。&lt;/p&gt;
&lt;p&gt;&lt;img alt="0" src="https://lh4.googleusercontent.com/-DY5Bl_kQv-0/U_tFrAE4moI/AAAAAAAAAjE/AQPeOHISp7M/s640/1.JPG" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="1" src="https://lh5.googleusercontent.com/-jLa8XebtecM/U_tFr_3S31I/AAAAAAAAAjQ/rhqyyd0LqOE/s640/2.JPG" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="2" src="https://lh6.googleusercontent.com/-SSjx1mMbdmA/U_tFr2jft0I/AAAAAAAAAjU/JoR6t2voIhE/s640/3.JPG" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="3" src="https://lh3.googleusercontent.com/-8R6Gl6uiY1g/U_tFu4AMCxI/AAAAAAAAAjc/ZRnzCzby8tk/s640/4.JPG" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="4" src="https://lh3.googleusercontent.com/-db76lGs-1F0/U_tFwM1XN7I/AAAAAAAAAjk/MD8RzavcxFY/s512/5.jpg" /&gt;&lt;/p&gt;</summary><category term="bmw"></category></entry><entry><title>为什么选择bmw</title><link href="http://www.lizherui.com/pages/2014/07/26/why_bmw.html" rel="alternate"></link><updated>2014-07-26T00:00:00+08:00</updated><author><name>lizherui</name></author><id>tag:www.lizherui.com,2014-07-26:pages/2014/07/26/why_bmw.html</id><summary type="html">&lt;p&gt;距离bmw 320i时尚的提车时间已经不远了。&lt;/p&gt;
&lt;p&gt;越来越期待，越来越激动。&lt;/p&gt;
&lt;p&gt;半年前就开始混汽车之家，在benz、bmw、audi之间纠结了很久，最终选了bmw。&lt;/p&gt;
&lt;p&gt;有人说，benz像是一个精英教育制度下的三好学生，相貌堂堂、举止优雅、知识渊博，是教科书版完美的男人。&lt;/p&gt;
&lt;p&gt;有人说，bmw像是一个行为处事放荡不羁但内心却又坚持梦想的大男孩，虽然有着无数缺点，但是其自身独特的魅力吸引了无数异性的关注。&lt;/p&gt;
&lt;p&gt;有人说，audi像是一个暴发户的儿子，爸爸是个煤矿工人，后来机缘巧合当上了煤老板，于是把儿子送进了贵族学校，同时请最好的裁缝做了最漂亮的衣服帮儿子吸引了很多眼球，但是接触下来，才知道这个儿子天性木讷，沉默寡言，毫无乐趣。&lt;/p&gt;
&lt;p&gt;我觉得bmw和apple真的很像，不仅是卖产品，更是卖理念。因此全世界的人们都为它们痴迷，不仅是买它们的产品，更是买它们独特的理念、背后的故事和生活的乐趣。&lt;/p&gt;
&lt;p&gt;最爱bmw的宣传理念——&lt;strong&gt;Sheer Driving Pleasure&lt;/strong&gt;，正如互联网行业很多开发人员的理念——&lt;strong&gt;Sheer Coding Pleasure&lt;/strong&gt;.&lt;/p&gt;</summary><category term="bmw"></category></entry><entry><title>阅读英文原版的初步体验</title><link href="http://www.lizherui.com/pages/2014/03/23/beginning_of_reading_English_books.html" rel="alternate"></link><updated>2014-03-23T00:00:00+08:00</updated><author><name>lizherui</name></author><id>tag:www.lizherui.com,2014-03-23:pages/2014/03/23/beginning_of_reading_English_books.html</id><summary type="html">&lt;p&gt;2月下旬年假结束回杭，开始执行“英文原版阅读计划”，到今天差不多一个月了。我使用&lt;a href="https://www.dropbox.com/sh/hgihoqsrpnjnl2d/h4bEwUWgZl/en"&gt;Dropbox&lt;/a&gt;分享所有的英文书籍。&lt;/p&gt;
&lt;p&gt;这一个月的战况依次是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.dropbox.com/sh/hgihoqsrpnjnl2d/89Q--qQyUi/en/tech/Hackers%20And%20Painters.pdf"&gt;《Hackers And Painters》&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.dropbox.com/sh/hgihoqsrpnjnl2d/4VBvBXi1bg/en/life/The%20Google%20Resume.pdf"&gt;《The Google Resume》&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.dropbox.com/sh/hgihoqsrpnjnl2d/W45SVrZhtx/en/tech/The%20Cathedral%20And%20The%20Bazaar.pdf"&gt;《The Cathedral And The Bazaar》&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.dropbox.com/sh/hgihoqsrpnjnl2d/f8u1epma2V/en/tech/The%20Google%20File%20System.pdf"&gt;《The Google File System》&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.dropbox.com/sh/hgihoqsrpnjnl2d/iFsPI7IqnL/en/tech/Bigtable-A%20Distributed%20Storage%20System%20for%20Structured%20Data.pdf"&gt;《Bigtable-A Distributed Storage System for Structured Data》&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.dropbox.com/sh/hgihoqsrpnjnl2d/8eT0j1J63f/en/tech/MapReduce-Simplied%20Data%20Processing%20on%20Large%20Clusters.pdf"&gt;《MapReduce-Simplied Data Processing On Large Clusters》&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在这之前，只阅读中文技术资料的习惯使我总会不由自主地排斥英文资料，一碰到英文的技术资料，脑子里的第一反应就是：擦，英文的！赶紧去搜一下有木有翻译版。此外，浏览&lt;a href="http://www.quora.com/"&gt;Quora&lt;/a&gt;、&lt;a href="http://stackoverflow.com"&gt;StackOverflow&lt;/a&gt;这样的英文网站时，阅读任何英文问答都很没有耐心。&lt;/p&gt;
&lt;p&gt;我相信很多人都是这样的。&lt;/p&gt;
&lt;p&gt;就像上一篇博文所说的，我还想再重复一次：这种状态让我意识到了一个非常严重的问题，排斥英文资料相当于给自己&lt;strong&gt;设限&lt;/strong&gt;，会让自己错过更优秀的知识和资料(众所周知，最好的技术资料往往都是英文的)。这会阻碍我们的成长，所以这个问题必须得到解决。&lt;/p&gt;
&lt;p&gt;这一个月下来，从半技术的英文书籍入手，过渡到谈论架构的英文论文，目前我感觉非常非常好，下一步准备阅读以技术细节为主的英文书籍，如&lt;a href="https://www.dropbox.com/sh/hgihoqsrpnjnl2d/I0a4-AnN_N/en/tech/Inside%20The%20Java%202%20Virtual%20Machine.pdf"&gt;《Inside The Java 2 Virtual Machine》&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;在实践中，我发现了一个现象，让我感到尤为惊讶：有很多细节，是&lt;strong&gt;“不可翻译的”&lt;/strong&gt;。一个段落或一篇文章中&lt;strong&gt;“不可翻译”&lt;/strong&gt;的部分越多，翻译版与英文原版的差别就会越大。这一点在阅读Google的那3篇著名论文中表现得尤为明显，我曾尝试过阅读翻译版好几次，但每次读到一半就会产生不知所云的感觉，最终半途而废。没想到这次试着读了下英文原版，居然一次成功，完完整整地读了下来，并且基本弄明白了意思。&lt;/p&gt;
&lt;p&gt;Why?&lt;/p&gt;
&lt;p&gt;Google这三篇论文太长，我举一个短点儿的例子。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.dropbox.com/sh/hgihoqsrpnjnl2d/FNKQ4YUlbv/en/tech/The%20Philosophy%20of%20Open%20Source.pdf"&gt;《The Philosophy of Open Source》&lt;/a&gt;这本书，以著名的“Linux kernel management style by Linus Torvalds”结尾，这一段由啄木鸟社区(啄木鸟社区的水平还是相当高的)翻译如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;1.1 导言
Linus Torvalds 在2004年把一篇讲&amp;quot;Linux内核的管理风格&amp;quot;的文章放在了内核源码文档里。这篇文章有意对应他以前写的关于编码 风格的文章（比如烧书仪式），也有技术人员熟悉的Dilbert卡通的影子。 Henrik Ingo 写&amp;quot;Open Life: The Philosophy of Open Source&amp;quot;一书的时候，拿这篇文章作了后记。

这篇文章其实是总结了Linus十几年里领导开源运动的经验。更重要的是，它讲述了一种与传统不同的做事理念，一种后互联网时代的、尊重技术和自由的理念。

Linus的写作诙谐生动，完全不同于ESR的《大教堂和市集》。所以我作了比较自由的翻译。以下是译文。

1.2. Linux内核的管理风格
（Linux kernel management style, by Linus Torvalds. Retrieved from http://openlife.cc/node/43, Jan-28-2008）

这个简单文档描述Linux内核偏爱的（或编造的，取决于你问谁）管理模式。它在一定程度上是编码风格文档的影子，主要写来避免一遍又一遍回答同一类问题＊。

管理风格是很个人化的，比起简单的编码风格条例更难量化，所以这个文档跟现实可能沾边也可能不沾边。它开始于游戏，但是不见得就不作数。你只有自个儿决定。
顺便说一下，我们说到&amp;quot;内核管理者&amp;quot;的时候，完全是说技术带头人，不是公司里那些作传统管理工作的人。如果你是在订单上签名的人或者对你们组的预算知道一丁半点，你几乎一定不是个&amp;quot;内核管理者&amp;quot;。这些建议对你可能适用也可能不适用。
首先，我建议你买一本《高度成功人士的七个习惯》，不－要读它，烧了。表一下决心。
（＊） 这个文档不见得&amp;quot;回答&amp;quot;多少问题，更大程度上是展示我们的无知，让提问者死了这条心。
不管怎样，开讲了：

1.2.1. 第一章：决定
每个人都觉得管理者是作决定的，作决定是很重要的。决定越大、越艰难，管理者就越伟大。这一点很深刻、很明显，但不见得正确。

事情的要义是避免－作决定的必要性。特别是，当有人告诉你&amp;quot;是甲还是乙，我们需要你来作决定&amp;quot;，你作管理的麻烦就来了。你手下的人一般比你更懂具体问题，所以要是他们找你作一个技术性的决定，你死定了。要替他们作决定，你显然水平不够。
（推论：如果你手下的人不比你更懂具体问题，你还是死定了，尽管出于完全不同的原因。说白了就是你站错了岗位，应该他们－来管理你的才华才对。）

所以要义是避免－决定，至少避免大的和艰难的决定。作小的、不重要的决定还好了，而且让你挺挺板板、面上有光。所以一个内核管理者需要的是把大的艰难的决定变成没人在乎的小事情。
帮你点拨一下，大决定和小决定的区别在于你能否事后修补得了。如果你犯错了的时候（而且你会－犯错），你能返回来弥补损失，那么你可以把任何的决定变成&amp;quot;小决定&amp;quot;。一下子，你的表现机会多了一倍：你要作两－个不重要的决定，错误决定&amp;quot;加上&amp;quot;正确决定。
而且大家甚至会认为这是领导才能（咳咳，狗屁，咳咳）。因此避免作重大决定的要点成了仅仅避免做不可逆反的事情。不要被牵引到一个无路可逃的角落里。困在角落里的耗子或许是危险的，困在角落里的管理者不过是个可怜虫。
事实上，不管怎样－，没有人会愚蠢到让一个内核管理者承担太大的财政责任，所以纠正错误一般不是多难。既然你没有机会浪费掉你倾家荡产也还不清的巨额经费，你要纠正的不过是一个技术性的决定。那就好办了：告诉每个人你是个不称职的白痴，说对不起，把你让大家上一年作的无用功都扔掉。一下子，你一年前作的决定也不见得是什么重大决定，既然能简单的撤销掉。
然而事实上，有些人搞不来这个办法。有两个原因：
（一）承认自己是傻瓜做起来蛮难的。我们都喜欢保持形象，公开认错有时候是很困难。
（二）对下级的工程师来说，被人告知自己上一年的工作落得一文不值，也是很恼火的。实际的工作结果－可以删除了事，但你可能就永久性的失去了这个工程师的信任。记住，&amp;quot;永久性&amp;quot;是我们要避免的第一件事，这样你的决定最终还是一个重大决定。
所幸的是，你对两个原因都可以棋高一着，未雨绸缪，防患未然。办法是：事先就承认你狗屁不懂，告诉大家你的决定不过是摸着石头过河，说不定就掉河里了。
你应该永远保留改变决定的权利，而且要让大家明白－这一点。而且在你做了真正的傻事之前承认你是个傻瓜要容易的多。
这样，当事情真的到了傻冒的地步，人们不过是翻下眼皮，说：&amp;quot;唉......真是灵验啊......&amp;quot;
这种事先承认不足的做法可能还会让下面真正做事的人三思而后行，想一下值不值。说回来，如果他们－都不确定是个好主意，你铁定了不应该给他们开绿灯，煽风点火。至少要让他们在开始大动作之前好好想一下。
记住：他们在细节上应该知道的比你多，而且他们一般觉得一切已在掌握之中。作为管理者，你能做的最好的事情不是给他们填充信心，而是给他们适量的批判理性。
顺便说一下，另外一个避免决定的办法是装可怜，简单地问&amp;quot;我们为什么不能两个都做呢？&amp;quot; 相信我，这个有用。如果不清楚哪条路子更好一些，他们最终会整明白的。答案或许是两帮人都挫败灰心，双双放弃。
这听起来像是个失败，但它一般是两个项目都有问题的迹象，大家无法决定的原因是双方都错了。结果是你成了智慧的舵手，而且你又避免了一个本来会死得很难看的决定。

1.2.2. 第二章：人
大多数人都是傻瓜，当管理者就意味着你不得不和这一点打交道。或许更重要的是，他们－不得不和你－打交道。

事实证明，消除技术性问题还是容易的，消除人脑筋里的问题就没那么容易了。你就不得不忍受这些问题，他们的还有你自个儿的问题。
然而，为了做好内核管理者，最好记住不要自绝后路，伤及无辜，或树敌过众。现实是，疏远人们是蛮容易的，把他们拉拢回来就难了。因此&amp;quot;疏远&amp;quot;直接归类到&amp;quot;不可逆反&amp;quot;的事情里，就是第一章里说的大忌。

这里只有两条简单的规则：
（一）不要骂人猪头（至少不要在公开场合下）
（二）要是你忘了第一条，学会怎样道歉
第一条的问题是太容易违反，因为你有一万种骂人猪头的办法＊，有时不自觉就骂了，而且几乎总是义愤填膺、义正严词。
而且你越是骂的热血沸腾（让我们来面对事实，你可以骂几乎任何－人猪头，你往往不－会骂错），事后你越难道歉。
要解决这个问题，你其实只有两条路子：
（一）成为道歉专家
（二）&amp;quot;遍洒博爱，处处留情&amp;quot;，这样没有人会觉得受到了特殊待遇。骂出新意，骂出水准，他们没准会找到艺术的享受。
第三条路子，始终如一的作谦谦君子，是行不通的。没有人会信任城府太深的人。
＊保罗西蒙的歌唱道&amp;quot;失恋五十种&amp;quot;，是因为老实说，&amp;quot;骂一个程序员猪头一万种&amp;quot;没有那么押韵。不过我相信他肯定考虑过这个。

1.2.3. 第三章：能人
尽管现实是大多数人都是傻瓜，不幸的推论包括你也是傻瓜之一，尽管我们都心安理得的自认比傻瓜高明（让我们来面对事实，没有人自认傻瓜或不如傻瓜），我们还是应该承认我们不是独步江湖，总会有一些人不像我们一样的傻瓜。一些人嫉贤妒能，另一些人从善如流。

确定你，作为一个内核管理者，属于第二种。贴紧了高手能人，因为他们会使你的工作变容易。特别是，他们将能够替你作决定，这正是事情的要义。
所以你要是发现了比你聪明的人，顺水推舟好了。你的管理职责很大程度上就成了说一下&amp;quot;听起来是个好主意，放手去干吧&amp;quot;，或者&amp;quot;这个不错，那个XXX怎么样呢？&amp;quot;。第二个版本尤其有效：你要么学到一些关于&amp;quot;XXX&amp;quot;的新东西，要么指出了聪明人都没想到的东西，表现得胸有－韬略。随便那种情况，你都是赢家。
另外一件要小心的事情是，一个人在一方面厉害不见得在其他方面也厉害。你或许煽动谁做什么，但是让我们来面对事实，他或许精通自己的一亩三分地却其他什么都做不来。好的消息是，人们自然而然的倾向于选择自己擅长的事情来做。所以你真的－煽动一下，一般不见得会造成什么不可逆反的后果，只是不要用铁扇公主的芭蕉扇来煽。

1.2.4. 第四章：担当
事情总会出错的，大家会找人来责怪。哈，就是你了。

担当责任其实不是那么难的，尤其是当大家心里也有数，不全－是你的错的时候。这带来了担当责任的最好的方式：代人受过。你会因为挑起了担子而心安，那个真正搞砸了的家伙不会成为众矢之的而颓废，至于那个因为你的失职而丢失了半个硬盘的A片的家伙，也会嘟嘟囔囔的承认你至少没有猥猥琐琐的推卸责任。
然后，私下－告诉那个搞砸了的家伙是他搞砸了（如果你能发现他的话）。这样不仅让他以后避免重犯，而且让他知道他欠你一个人情。而且，或许更重要的是，他可能就是那个能修补事故的人。因为，让我们来面对事实，你肯定不行。
担当责任也是最初你来作管理者的原因。这是领导者的本分。大家能信任你，给你荣誉，是因为你在必要的时候能说&amp;quot;是我不好&amp;quot;。而且如果你已经遵循了前面的规则，你现在说这个应该很在行了。

1.2.5. 第五章：禁区
比骂人&amp;quot;猪头&amp;quot;更招人恨的是用挖苦的语调骂人&amp;quot;猪头&amp;quot;。你可以为前一个道歉，后一个你都不会有道歉的机会。即使你其他方面都做的很好，他们可能也不会再听你的了。

我们都自我感觉良好，就是说当别人指手划脚的时候，真的－是可忍孰不可忍。你可能在才智品行上超出你周围所有的人，但是你要不是真的想－招惹谁的话＊，不要&amp;quot;表现&amp;quot;得太明显。类似的，处理问题不要太客气或微妙。客气往往会隔靴搔痒，不得要害。就像人家说的，&amp;quot;在互联网上，没有人听得到你微妙&amp;quot;。大张旗鼓、锣鼓喧天的把你的意见摆出来，不然你没法指望大家领悟到。
一点幽默可以帮助润滑你的蛮横和说教。过分夸张到荒诞的地步，既能充分表达你的观点，又不至于让对方难堪，因为他只会认为你在发疯。这样就可以绕过我们每个人都有的、抵制批评的心理盲区。
＊支一招：和你的工作不直接相关的网络论坛（译者按：Linus是说新闻组。没看到西方国家的论坛事业有中国这么发达。）是发泄的好地方。隔三岔五的，狞笑着写点侮辱人的帖子来点燃战火，会让你再次焕发青春。只是不要把战火烧到自己的老巢。

1.2.6. 第六章：为什么是我？
既然你的主要职责好像就是代人受过，赤裸裸的展示自己如何不称职，显然的问题是：那你为什么还要做呢？
首要的是，可能有也可能没有尖叫着的小女生（或者小男生，我们不要作道学家或性别岐视）来敲你更衣室的门，作&amp;quot;负责人&amp;quot;会－给你带来巨大的个人成就感。不用说你的&amp;quot;领导&amp;quot;其实是拼命从后面追赶大家、努力跟上大家的步伐。每个人还是会认为你是&amp;quot;负责人&amp;quot;。
如果你能驾驭得了，这是一项伟大的工作。
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;读的时候有什么感觉？我读的时候笑了好几次，文章描绘出Linus Torvalds特别搞笑的形象，而且这篇文章的总体意义给我的感觉是&lt;strong&gt;调侃&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;但是，果真如此吗？让我们再看看英文原版：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Epilogue
While this book was being prepared for its original publication in Finland, an essay written by Linus Torvalds himself turned up within the files of the Linux source codes. In his essay he explains the management culture that developed over the years in the kernel project. On 10 October 2004, Linus added the file into the Linux kernel sources as a file Documentation/ ManagementStyle and labelled the addition as Wisdom passed down the ages on clay tablets. Hidden within the source codes of the kernel the writing has not received much publicity, but it embodies so much life experience and wisdom, that it should definitely be compulsory reading for any corporate manager. In it we witness the silent nerd turn into a brilliant psychologist and leader, sharing what he has learned while working successfully for 13 years as the project manager for one of the world&amp;#39;s largest software projects. And I can&amp;#39;t think of a better way to end this book than giving the final word to the master himself.
This is a short document describing the preferred (or made up, depending on who you ask) management style for the linux kernel. It&amp;#39;s meant to mirror the CodingStyle document to some degree, and mainly written to avoid answering (*) the same (or similar) questions over and over again.

Management style is very personal and much harder to quantify than simple coding style rules, so this document may or may not have anything to do with reality. It started as a lark, but that doesn&amp;#39;t mean that it might not actually be true. You&amp;#39;ll have to decide for yourself.
Btw, when talking about &amp;quot;kernel manager&amp;quot;, it&amp;#39;s all about the technical lead persons, not the people who do traditional management inside companies. If you sign purchase orders or you have any clue about the budget of your group, you&amp;#39;re almost certainly not a kernel manager. These suggestions may or may not apply to you.

First off, I&amp;#39;d suggest buying &amp;quot;Seven Habits of Highly Successful People&amp;quot;, and NOT read it. Burn it, it&amp;#39;s a great symbolic gesture.

(*) This document does so not so much by answering the question, but by making it painfully obvious to the questioner that we don&amp;#39;t have a clue to what the answer is.

Anyway, here goes:

Chapter 1: Decisions

Everybody thinks managers make decisions, and that decision-making is important. The bigger and more painful the decision, the bigger the manager must be to make it. That&amp;#39;s very deep and obvious, but it&amp;#39;s not actually true.

The name of the game is to _avoid_ having to make a decision. In particular, if somebody tells you &amp;quot;choose (a) or (b), we really need you to decide on this&amp;quot;, you&amp;#39;re in trouble as a manager. The people you manage had better know the details better than you, so if they come to you for a technical decision, you&amp;#39;re screwed. You&amp;#39;re clearly not competent to make that decision for them.
(Corollary:if the people you manage don&amp;#39;t know the details better than you, you&amp;#39;re also screwed, although for a totally different reason. Namely that you are in the wrong job, and that _they_ should be managing your brilliance instead).

So the name of the game is to _avoid_ decisions, at least the big and painful ones. Making small and non-consequential decisions is fine, and makes you look like you know what you&amp;#39;re doing, so what a kernel manager needs to do is to turn the big and painful ones into small things where nobody really cares.

It helps to realize that the key difference between a big decision and a small one is whether you can fix your decision afterwards. Any decision can be made small by just always making sure that if you were wrong (and you _will_ be wrong), you can always undo the damage later by backtracking. Suddenly, you get to be doubly managerial for making _two_ inconsequential decisions - the wrong one _and_ the right one.

And people will even see that as true leadership (*cough* bullshit *cough*).
Thus the key to avoiding big decisions becomes to just avoiding to do things that can&amp;#39;t be undone. Don&amp;#39;t get ushered into a corner from which you cannot escape. A cornered rat may be dangerous - a cornered manager is just pitiful.

It turns out that since nobody would be stupid enough to ever really let a kernel manager have huge fiscal responsibility _anyway_, it&amp;#39;s usually fairly easy to backtrack. Since you&amp;#39;re not going to be able to waste huge amounts of money that you might not be able to repay, the only thing you can backtrack on is a technical decision, and there back-tracking is very easy: just tell everybody that you were an incompetent nincompoop, say you&amp;#39;re sorry, and undo all the worthless work you had people work on for the last year. Suddenly the decision you made a year ago wasn&amp;#39;t a big decision after all, since it could be easily undone.

It turns out that some people have trouble with this approach, for two reasons:

- admitting you were an idiot is harder than it looks. We all like to maintain appearances, and coming out in public to say that you were wrong is sometimes very hard indeed.

- having somebody tell you that what you worked on for the last year wasn&amp;#39;t worthwhile after all can be hard on the poor lowly engineers too, and while the actual _work_ was easy enough to undo by just deleting it, you may have irrevocably lost the trust of that engineer. And remember: &amp;quot;irrevocable&amp;quot; was what we tried to avoid in the first place, and your decision ended up being a big one after all.

Happily, both of these reasons can be mitigated effectively by just admitting up-front that you don&amp;#39;t have a friggin&amp;#39; clue, and telling people ahead of the fact that your decision is purely preliminary, and might be the wrong thing. You should always reserve the right to change your mind, and make people very _aware_ of that. And it&amp;#39;s much easier to admit that you are stupid when you haven&amp;#39;t _yet_ done the really stupid thing.

Then, when it really does turn out to be stupid, people just roll their eyes and say &amp;quot;Oops, he did it again&amp;quot;.

This preemptive admission of incompetence might also make the people who actually do the work also think twice about whether it&amp;#39;s worth doing or not. After all, if _they_ aren&amp;#39;t certain whether it&amp;#39;s a good idea, you sure as hell shouldn&amp;#39;t encourage them by promising them that what they work on will be included. Make them at least think twice before they embark on a big endeavor.
Remember: they&amp;#39;d better know more about the details than you do, and they usually already think they have the answer to everything. The best thing you can do as a manager is not to instill confidence, but rather a healthy dose of critical thinking on what they do.

Btw, another way to avoid a decision is to plaintively just whine &amp;quot;can&amp;#39;t we just do both?&amp;quot; and look pitiful. Trust me, it works. If it&amp;#39;s not clear which approach is better, they&amp;#39;ll eventually figure it out. The answer may end up being that both teams get so frustrated by the situation that they just give up.

That may sound like a failure, but it&amp;#39;s usually a sign that there was something wrong with both projects, and the reason the people involved couldn&amp;#39;t decide was that they were both wrong. You end up coming up smelling like roses, and you avoided yet another decision that you could have screwed up on.

Chapter 2: People

Most people are idiots, and being a manager means you&amp;#39;ll have to deal with it, and perhaps more importantly, that _they_ have to deal with _you_.

It turns out that while it&amp;#39;s easy to undo technical mistakes, it&amp;#39;s not as easy to undo personality disorders. You just have to live with theirs - and yours.

However, in order to prepare yourself as a kernel manager, it&amp;#39;s best to remember not to burn any bridges, bomb any innocent villagers, or alienate too many kernel developers. It turns out that alienating people is fairly easy, and un-alienating them is hard. Thus &amp;quot;alienating&amp;quot; immediately falls under the heading of &amp;quot;not reversible&amp;quot;, and becomes a no-no according to Chapter 1.

There&amp;#39;s just a few simple rules here:

(1) don&amp;#39;t call people d*ckheads (at least not in public)
(2) learn how to apologize when you forgot rule (1)

The problem with #1 is that it&amp;#39;s very easy to do, since you can say &amp;quot;you&amp;#39;re a d*ckhead&amp;quot; in millions of different ways (*), sometimes without even realizing it, and almost always with a white-hot conviction that you are right.

And the more convinced you are that you are right (and let&amp;#39;s face it, you can call just about _anybody_ a d*ckhead, and you often _will_ be right), the harder it ends up being to apologize afterwards.

To solve this problem, you really only have two options:
- get really good at apologies
- spread the &amp;quot;love&amp;quot; out so evenly that nobody really ends up feeling like they get unfairly targeted. Make it inventive enough, and they might even be amused.

The option of being unfailingly polite really doesn&amp;#39;t exist. Nobody will trust somebody who is so clearly hiding his true character.

(*) Paul Simon sang &amp;quot;Fifty Ways to Lose Your Lover&amp;quot;, because quite frankly, &amp;quot;A Million Ways to Tell a Developer He Is a D*ckhead&amp;quot; doesn&amp;#39;t scan nearly as well. But I&amp;#39;m sure he thought about it.

Chapter 3: People II - the Good Kind

While it turns out that most people are idiots, the corollary to that is sadly that you are one too, and that while we can all bask in the secure knowledge that we&amp;#39;re better than the average person (let&amp;#39;s face it, nobody ever believes that they&amp;#39;re average or below-average), we should also admit that we&amp;#39;re not the sharpest knife around, and there will be other people that are less of an idiot that you are.

Some people react badly to smart people. Others take advantage of them.
Make sure that you, as a kernel maintainer, are in the second group. Suck up to them, because they are the people who will make your job easier. In particular, they&amp;#39;ll be able to make your decisions for you, which is what the game is all about.

So when you find somebody smarter than you are, just coast along. Your management responsibilities largely become ones of saying &amp;quot;Sounds like a good idea - go wild&amp;quot;, or &amp;quot;That sounds good, but what about xxx?&amp;quot;. The second version in particular is a great way to either learn something new about &amp;quot;xxx&amp;quot; or seem _extra_ managerial by pointing out something the smarter person hadn&amp;#39;t thought about. In either case, you win.

One thing to look out for is to realize that greatness in one area does not necessarily translate to other areas. So you might prod people in specific directions, but let&amp;#39;s face it, they might be good at what they do, and suck at everything else. The good news is that people tend to naturally gravitate back to what they are good at, so it&amp;#39;s not like you are doing something irreversible when you _do_ prod them in some direction, just don&amp;#39;t push too hard.

Chapter 4: Placing blame

Things will go wrong, and people want somebody to blame. Tag, you&amp;#39;re it.
It&amp;#39;s not actually that hard to accept the blame, especially if people kind of realize that it wasn&amp;#39;t _all_ your fault. Which brings us to the best way of taking the blame: do it for another guy. You&amp;#39;ll feel good for taking the fall, he&amp;#39;ll feel good about not getting blamed, and the guy who lost his whole 36GB porn-collection because of your incompetence will grudgingly admit that you at least didn&amp;#39;t try to weasel out of it.

Then make the developer who really screwed up (if you can find him) know _in_private_ that he screwed up. Not just so he can avoid it in the future, but so that he knows he owes you one. And, perhaps even more importantly, he&amp;#39;s also likely the person who can fix it. Because, let&amp;#39;s face it, it sure ain&amp;#39;t you.

Taking the blame is also why you get to be manager in the first place. It&amp;#39;s part of what makes people trust you, and allow you the potential glory, because you&amp;#39;re the one who gets to say &amp;quot;I screwed up&amp;quot;. And if you&amp;#39;ve followed the previous rules, you&amp;#39;ll be pretty good at saying that by now.

Chapter 5: Things to avoid

There&amp;#39;s one thing people hate even more than being called &amp;quot;d*ckhead&amp;quot;, and that is being called a &amp;quot;d*ckhead&amp;quot; in a sanctimonious voice. The first you can apologize for, the second one you won&amp;#39;t really get the chance. They likely will no longer be listening even if you otherwise do a good job.

We all think we&amp;#39;re better than anybody else, which means that when somebody else puts on airs, it _really_ rubs us the wrong way. You may be morally and intellectually superior to everybody around you, but don&amp;#39;t try to make it too obvious unless you really _intend_ to irritate somebody (*).
Similarly, don&amp;#39;t be too polite or subtle about things. Politeness easily ends up going overboard and hiding the problem, and as they say, &amp;quot;On the internet, nobody can hear you being subtle&amp;quot;. Use a big blunt object to hammer the point in, because you can&amp;#39;t really depend on people getting your point otherwise.

Some humor can help pad both the bluntness and the moralizing. Going overboard to the point of being ridiculous can drive a point home without making it painful to the recipient, who just thinks you&amp;#39;re being silly. It can thus help get through the personal mental block we all have about criticism.

(*) Hint: internet newsgroups that are not directly related to your work are great ways to take out your frustrations at other people. Write insulting posts with a sneer just to get into a good flame every once in a while, and you&amp;#39;ll feel cleansed. Just don&amp;#39;t crap too close to home.

Chapter 6: Why me?

Since your main responsibility seems to be to take the blame for other peoples mistakes, and make it painfully obvious to everybody else that you&amp;#39;re incompetent, the obvious question becomes one of why do it in the first place?

First off, while you may or may not get screaming teenage girls (or boys, let&amp;#39;s not be judgmental or sexist here) knocking on your dressing room door, you _will_ get an immense feeling of personal accomplishment for being &amp;quot;in charge&amp;quot;. Never mind the fact that you&amp;#39;re really leading by trying to keep up with everybody else and running after them as fast as you can. Everybody will still think you&amp;#39;re the person in charge.

It&amp;#39;s a great job if you can hack it.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;作者的形象、文章的风格和总体意义，是不是完全不一样了？&lt;/p&gt;
&lt;p&gt;The most important thing is that it makes us &lt;strong&gt;deep thinking&lt;/strong&gt; while reading.&lt;/p&gt;
&lt;p&gt;Think about it.&lt;/p&gt;</summary><category term="English book"></category></entry><entry><title>10000 Hours from Youtube</title><link href="http://www.lizherui.com/pages/2014/03/07/youtube_10000_hours.html" rel="alternate"></link><updated>2014-03-07T00:00:00+08:00</updated><author><name>lizherui</name></author><id>tag:www.lizherui.com,2014-03-07:pages/2014/03/07/youtube_10000_hours.html</id><summary type="html">&lt;p&gt;《10000 Hours》已经出到第五部了，始发于Youtube。&lt;/p&gt;
&lt;p&gt;优酷上有翻译过的前3部，不过优酷的视频实在让人反感：广告太恶心，画面质量、翻译质量和翻译效率都不尽人意。&lt;/p&gt;
&lt;p&gt;故从Youtube上把英文原版转载过来。&lt;/p&gt;
&lt;p&gt;Break the wall and enjoy them.&lt;/p&gt;
&lt;p&gt;10000 Hours Episode 1:&lt;/p&gt;
&lt;iframe width="640" height="360" src="//www.youtube.com/embed/EEtpH6ZEPOc?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;10000 Hours Episode 2 - Pay Off:&lt;/p&gt;
&lt;iframe width="640" height="360" src="//www.youtube.com/embed/2ZA_1Xpyqs0?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;10000 Hours Episode 3:&lt;/p&gt;
&lt;iframe width="640" height="360" src="//www.youtube.com/embed/yfW4r0q3v0M?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;10000 Hours Episode 4 - In The Lab:&lt;/p&gt;
&lt;iframe width="640" height="360" src="//www.youtube.com/embed/U-C6KELmp8U?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;10000 Hours Episode 5 - Knight And Day(PART 1):&lt;/p&gt;
&lt;iframe width="640" height="360" src="//www.youtube.com/embed/Svd-0F-uIOM?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;10000 Hours Episode 5 - Knight And Day(PART 2):
&lt;iframe width="640" height="360" src="//www.youtube.com/embed/jS0lqyXjSOc?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;10000 HOURS EPISODE 6 - UNCOMFORTABLE PART 1
&lt;iframe width="640" height="360" src="//www.youtube.com/embed/5uWJHvHFkpY?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;</summary><category term="练习"></category><category term="一万小时"></category></entry><entry><title>为什么要阅读英文原版</title><link href="http://www.lizherui.com/pages/2014/02/25/why_English_books.html" rel="alternate"></link><updated>2014-02-25T00:00:00+08:00</updated><author><name>lizherui</name></author><id>tag:www.lizherui.com,2014-02-25:pages/2014/02/25/why_English_books.html</id><summary type="html">&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;早在去年冬季，我就有这样的想法了，准备认真读读一些经典书籍的英文原版。&lt;/p&gt;
&lt;p&gt;遗憾的是，那个时候双11刚刚结束，我一下子有了大解放的感觉，于是不由自主地开始熬夜放纵，把大量的时间花在了玩游戏上。&lt;/p&gt;
&lt;p&gt;寒假终于警觉起来，执意不带鼠标回家，算是遏制住了一点。&lt;/p&gt;
&lt;p&gt;年后上班，一位朋友突然告诉我，说我上进的形象一直激励着她，非常感谢我。&lt;/p&gt;
&lt;p&gt;这让我反思了整整一夜，因为双11后，我已经变得不怎么上进了。但是别人都这样说了，我真的是没有办法，只能把鼠标丢进垃圾桶，开始计划并执行“英文原版”计划。&lt;/p&gt;
&lt;h2&gt;为什么要阅读英文原版&lt;/h2&gt;
&lt;p&gt;闲暇的时候，我常常在想，怎样才能让自己的水平更加锋利？&lt;/p&gt;
&lt;p&gt;观察并效仿大牛们的共同点是一个很好的途径，就像我们为了提高打游戏的水平，常常会观看明星选手的视频，然后加以模仿。&lt;/p&gt;
&lt;p&gt;我很早就观察到，阅读英文原版，是大牛们的共同点。大牛们还有很多类似性质的共同点，比如使用Google而非百度。&lt;/p&gt;
&lt;p&gt;长期以来，作为一个习惯阅读中文翻译版的菜鸟，我一直想不明白为什么大牛们都会去阅读英文原版。同时也觉得，翻译版和英文原版不就是语言有差别嘛，内容都一样阿。&lt;/p&gt;
&lt;p&gt;但是我联想到了另一件事情，当初我从百度转到Google也是完全一样的处境：作为一个长期习惯百度的菜鸟，我一直想不明白为什么大牛们都用Google，同时也觉得，百度已经足够好用了阿。&lt;/p&gt;
&lt;p&gt;后来我在搜狐实习时，师傅强制让我转到Google，很快使我有了质的提高，并意识到为什么会这样。&lt;/p&gt;
&lt;p&gt;所以，现在又是同样的处境，唯一的差别是没有师傅强制让我阅读英文原版。不过，联想到从百度转到Google的经历，我知道，这个时候根本不需要搞明白英文原版到底好在哪里，从翻译版转到英文原版已经是板上钉钉的事情了。&lt;/p&gt;
&lt;p&gt;如果有朋友觉得以上这条理由很难理解的话，那我就引用Cat Chen的一句话吧：“阅读翻译版意味着你永远在阅读二手资料。二手资料就意味着二流的资料。而一流的人才只会阅读一流的资料。”&lt;/p&gt;
&lt;h2&gt;实践&lt;/h2&gt;
&lt;p&gt;最近阅读了《Hackers And Painters》和《The Google Resume》，感觉确实很不一样。&lt;/p&gt;
&lt;p&gt;英文原版和翻译版的最大差别是前者是英文思维，后者是中文思维。一本书本来是按照英文思维写出来的，翻译过来难免会怪怪的。&lt;/p&gt;
&lt;p&gt;尤其是思维性质的书籍，几乎不可能把“英文思维流”准确地翻译成“中文思维流”。&lt;/p&gt;
&lt;p&gt;而且，读英文书籍由于经常碰到生词，所以不得不强迫自己更加认真，不像翻译版那样一目十行。&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;总有朋友问，英文不好怎么办，专业词太多怎么办，效率太低怎么办。&lt;/p&gt;
&lt;p&gt;Observe more, ask why, think about it, take a try, observe more......&lt;/p&gt;</summary><category term="英文"></category><category term="书籍"></category></entry><entry><title>2013总结</title><link href="http://www.lizherui.com/pages/2013/12/31/2013_summary.html" rel="alternate"></link><updated>2013-12-31T00:00:00+08:00</updated><author><name>lizherui</name></author><id>tag:www.lizherui.com,2013-12-31:pages/2013/12/31/2013_summary.html</id><summary type="html">&lt;p&gt;今天是2013年的最后一天，我在公司写下这篇总结。&lt;/p&gt;
&lt;p&gt;去年的这个时候，我还在百度实习，每天为各个项目忙得焦头烂额，而且老大突然安排了个巨蛋疼的项目，一怒之下借口期末考试请假回学校了。&lt;/p&gt;
&lt;p&gt;想着去年这个时候的情景，再看看身旁已经从天蓝色变成橘黄色的Logo，我记得上学的那会儿，与很多学生一样，天真地以为去哪个互联网公司工作都差不多。但是现在，让我们重新考虑一下这个问题，仔细地想一想，真是天壤之别。&lt;/p&gt;
&lt;p&gt;2013年大四寒假前夕，找工作历时半年，除了百度给了一个仍然悬而未定的实习转正offer，我没有任何靠谱的offer了。晚上熄灯后去刷牙的路上，我们几个菜比经常在走廊里讨论找工作阶段性成果，最后总是开玩笑地说：小声点，那边寝室坐着一个15K的，别吵到人家了。&lt;/p&gt;
&lt;p&gt;整个寒假，每天晚上躺在床上，一想到找工作几乎颗粒无收的半程结果，就感到很无力，又带一点心酸。每当家人、亲戚问我工作找得咋样，我总是拍着胸脯跟他们说：没问题的。但实际上是什么处境，只有自己心里最清楚。&lt;/p&gt;
&lt;p&gt;那会儿我成天琢磨这个事情，后来也总结出了一些现在看来还算准确的原因：对本科生找工作形势的判断过于乐观、对笔试面试决定性因素的认知存在偏差。&lt;/p&gt;
&lt;p&gt;打击最深的是百度秋季校招，整个百度食堂浩浩荡荡上千人的规模直接吓到我了，各路清华牛博、微软大硕都来了，竞争者的平均实力远远超出了我的预估。&lt;/p&gt;
&lt;p&gt;那会儿也流行刷《程序员面试宝典》《xxx面试100题》，就像很多人一样，我刷了一遍题后就自信满满地去面试，没想到自己还是不行。这件事情困扰了我很久，直到有一次等候面试时，与一个同来面试的哥们聊天，我随便说了句：“草，这个算法真复杂，昨天我练了一遍，没想到今天又忘得差不多了，希望等会进去面试的时候别再搞忘了。” 那哥们听后对我说：“为什么你不练10遍？”&lt;/p&gt;
&lt;p&gt;下半年改变策略后，事情基本按照我的预想进展，很顺利地拿到阿里、腾讯等靠谱offer。每次喝酒的时候，几个哥们总是说我运气真他吗好，走了狗屎运，然后感叹自己点背。我听后就会产生把那句话说出口的冲动：“为什么你不练10遍”？不过最终还是忍住了。&lt;/p&gt;
&lt;p&gt;总之，找工作这件事情让我产生了很多新的观念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“训练”是最重要的环节，而且效率训练的方法往往是共通的。比如提高编程技术和提高Dota技术，仔细想一想，其实是一个套路。&lt;/li&gt;
&lt;li&gt;如果想拿60分，目标至少要设定成80分。比如想拿BAT的offer，那就按照Google的要求去训练吧。&lt;/li&gt;
&lt;li&gt;对于重要的事情，彻底远离与之相关的任何形式的“心灵鸡汤”。虽然这些“心灵鸡汤”能让人心里暂时好受一些，但它们会影响我们对决定性因素、对形势的判断，并不再把责任归咎于自身。&lt;/li&gt;
&lt;li&gt;谋之于阴，成之于阳，努力的时候不要让任何人看见。&lt;/li&gt;
&lt;li&gt;没有什么“运气论”，如果把这次归咎于运气不好，那么同样的事情一定还会发生。&lt;/li&gt;
&lt;li&gt;痴迷是最好的状态。通宵CS和通宵Coding，都能让我们很快比同伴更厉害。在痴迷状态下，没有人能阻止一颗苦练的心。&lt;/li&gt;
&lt;li&gt;输不可怕，怕才可怕。那些“大神”们真的没有那么厉害，多花时间仔细想一想，我该怎么超过他们？需要多久？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;毕业后入职阿里半年，也算是有一些变化，我发现如果我真的想做一件很重要的事情，我直接就去做了，而越来越少地谈论它。阿里给我的感觉还是很好的，虽然也发生过一些不愉快的事情，比如轰动一时的Byvoid泄密事件，由于我长期活跃在北邮人论坛，居然被公司列为重点嫌疑人进行调查，差点被搞疯掉。&lt;/p&gt;
&lt;p&gt;不过这件事情让我感觉最愤怒的地方倒不是公司搞错了人，而是同样作为应届生，Byvoid在公司心中的地位如此之高。不过回头一想，谁让自己太弱呢。&lt;/p&gt;
&lt;p&gt;当然这半年来的工作经历也让我产生了一些新观念，顺便都写了把：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;资源比技术更重要。&lt;/li&gt;
&lt;li&gt;观察别人在做什么项目更重要。&lt;/li&gt;
&lt;li&gt;尽量“强制”，而不是“约定”。&lt;/li&gt;
&lt;li&gt;做出来，再说话。&lt;/li&gt;
&lt;li&gt;做之前无限降低对方的期望，做出来就能远超对方的期望。&lt;/li&gt;
&lt;li&gt;把意外当作对个人尊严侮辱的人永远不会再遭遇意外。 &lt;/li&gt;
&lt;li&gt;谈判的时候，不要让别人知道你的想法。&lt;/li&gt;
&lt;/ul&gt;</summary><category term="2013"></category></entry><entry><title>罗斯归来</title><link href="http://www.lizherui.com/pages/2013/10/06/Rose_is_back.html" rel="alternate"></link><updated>2013-10-06T00:00:00+08:00</updated><author><name>lizherui</name></author><id>tag:www.lizherui.com,2013-10-06:pages/2013/10/06/Rose_is_back.html</id><summary type="html">&lt;p&gt;罗斯是我最喜欢的NBA球员，快速且强壮，球风硬朗，极富侵略性。&lt;/p&gt;
&lt;p&gt;罗斯因伤休战了整整523天，终于在今天复出了。&lt;/p&gt;
&lt;p&gt;看罗斯打球有种独一无二的感觉，观赏性极强，速度与力量的完美结合。&lt;/p&gt;
&lt;p&gt;罗斯快攻时的态度一直激励着我：甭管前面站着多高多壮的球员，统统硬上。&lt;/p&gt;
&lt;p&gt;Too Big, Too Strong, Too Fast, Too Good.&lt;/p&gt;</summary><category term="罗斯"></category><category term="NBA"></category></entry><entry><title>对待技术的态度</title><link href="http://www.lizherui.com/pages/2013/08/18/attitude_to_tech.html" rel="alternate"></link><updated>2013-08-18T00:00:00+08:00</updated><author><name>lizherui</name></author><id>tag:www.lizherui.com,2013-08-18:pages/2013/08/18/attitude_to_tech.html</id><summary type="html">&lt;p&gt;最近北邮人论坛上对IT行业技术人员的声讨愈演愈烈，如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://bbs.byr.cn/#!article/Job/1397821"&gt;搞lT的要有自知之明!!!!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bbs.byr.cn/#!article/Job/1398322"&gt;搞IT的要有自知之明！！！！（之二）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bbs.byr.cn/#!article/Job/1398654"&gt;搞IT就是一个大坑&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;回应如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://bbs.byr.cn/#!article/Job/1398835"&gt;跳进IT这个大坑，一直没有自知之明（痛心疾首篇）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bbs.byr.cn/#!article/Job/1398880"&gt;IT行业不是一个坑~&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;争论非常激烈，各路大牛都在积极发表自己的看法。&lt;/p&gt;
&lt;p&gt;我认认真真看了每一条回复，仔仔细细思考了很久很久。&lt;/p&gt;
&lt;p&gt;我感觉很多人并不能很准确地理解IT行业技术人员对待技术的态度。&lt;/p&gt;
&lt;p&gt;该不该搞技术，尤其是该不该花大量的业余时间去钻研技术，真的不需要这么多乱七八糟的争论。&lt;/p&gt;
&lt;p&gt;至少对于我来说，在技术上花费如此多的时间和精力，最直接的原因就是：&lt;/p&gt;
&lt;p&gt;Just for fun.&lt;/p&gt;
&lt;p&gt;根本懒得去纠结思考学习某样技术到底有没有用、时间应该花在哪些更值得的事情上。&lt;/p&gt;
&lt;p&gt;就是为了乐趣而已。&lt;/p&gt;
&lt;p&gt;在某种程度上，这与很多人喜欢通宵打游戏、喜欢整天逛街是一回事。&lt;/p&gt;
&lt;p&gt;Have fun, and enjoy it.&lt;/p&gt;</summary><category term="技术"></category></entry><entry><title>温暖的杭州人</title><link href="http://www.lizherui.com/pages/2013/07/27/hang_zhou_ren.html" rel="alternate"></link><updated>2013-07-27T00:00:00+08:00</updated><author><name>lizherui</name></author><id>tag:www.lizherui.com,2013-07-27:pages/2013/07/27/hang_zhou_ren.html</id><summary type="html">&lt;p&gt;昨天傍晚我骑车去买水果，买完回去时忘记骑车了，没锁。快半夜才想起来这事，赶紧跑到已经关门的水果店门口，果然，车子没了。正当我郁闷地准备往回走时，没想到在水果店里看到了我的车子，一股暖意顿时涌上心头。&lt;/p&gt;
&lt;p&gt;我每天早上上班的时候会去楼下那个早餐店买包子。有一次买了4块5的东西，但是我手里只有4块零钱和20块整钱。我正准备给他20块钱，没想到他说：给4块钱得了，下次来的时候再给剩下的5毛吧。&lt;/p&gt;
&lt;p&gt;大家都知道江浙一代的人很会做生意，如今身临其境，确实开了眼界。这边做小本生意的人，不拘小节，也不看重短期的小利益，头脑、心态、眼光都很赞。&lt;/p&gt;
&lt;p&gt;这方面我会多加留意，用心学习。&lt;/p&gt;</summary><category term="杭州"></category></entry><entry><title>滑雪</title><link href="http://www.lizherui.com/pages/2013/07/21/hua_xue.html" rel="alternate"></link><updated>2013-07-21T00:00:00+08:00</updated><author><name>lizherui</name></author><id>tag:www.lizherui.com,2013-07-21:pages/2013/07/21/hua_xue.html</id><summary type="html">&lt;p&gt;没想到才来公司两周，就赶上了大型Outing。&lt;/p&gt;
&lt;p&gt;第一次滑雪还是在大二的冬天，跟着班上几个要好的同学去的北京郊区一个雪场。从那时起就对滑雪很有好感，很刺激。&lt;/p&gt;
&lt;p&gt;这次是跟着公司的人去滑雪。一路上让我愈发感到淘宝的人实在是太开放了，不停地开玩笑互黑。&lt;/p&gt;
&lt;p&gt;到雪场后，我直接选择了中级滑道。果然，几年没滑，非常生疏，连摔两次，屁股很痛。&lt;/p&gt;
&lt;p&gt;滑的途中我看到一个哥们不慎滑倒，更不幸的是脸砸到了滑板上，破了很大的一个口子，不住地流血，看样子是要破相了。他一脸黑线地坐在了一旁，一直用纸巾捂着脸上的伤口。&lt;/p&gt;
&lt;p&gt;我不知道他那时在想什么。这种倒霉的事情发生在任何人身上都会感到很郁闷。&lt;/p&gt;
&lt;p&gt;但是别忘了，滑雪是一个有风险的事情。&lt;/p&gt;
&lt;p&gt;每次从高台上出发时，我都在纠结，刚滑下去时要不要刹车减速。如果一开始就刹车减速，虽然不容易滑倒，但整个滑雪过程由于速度慢就不太刺激了；如果一开始就全速出发，虽然整个滑雪过程感到很刺激，但又比较容易失控滑倒。&lt;/p&gt;
&lt;p&gt;刺激or安全？风险or收益？怎么去平衡它们，怎么去不断地调节平衡点，是一件非常有意思的事情。&lt;/p&gt;
&lt;p&gt;晚上回到出租房，陪美女室友看完电视，帮她装自行车装到很晚。&lt;/p&gt;
&lt;p&gt;这些天，我感到这个出租房越来越有家的感觉了。白天各自上班，晚上大家一起看看电视聊聊天。&lt;/p&gt;
&lt;p&gt;说一下这个室友吧。人非常漂亮，从小到大都是班花。做事情也很不错，上得厅堂下得厨房，很讨人喜欢。作为一名新人hr，工作非常辛苦，每天回来也挺晚，总是黑眼圈，非常不容易。&lt;/p&gt;
&lt;p&gt;能找到这样的合租妹子，真是缘分。&lt;/p&gt;
&lt;p&gt;有的时候我强烈感觉，很多事情，仿佛就是事先设计好了一样。&lt;/p&gt;
&lt;p&gt;没错，这就是命。&lt;/p&gt;</summary><category term="淘宝"></category><category term="滑雪"></category></entry><entry><title>初到杭州</title><link href="http://www.lizherui.com/pages/2013/07/06/arrive_at_hangzhou.html" rel="alternate"></link><updated>2013-07-06T00:00:00+08:00</updated><author><name>lizherui</name></author><id>tag:www.lizherui.com,2013-07-06:pages/2013/07/06/arrive_at_hangzhou.html</id><summary type="html">&lt;p&gt;在入职淘宝的前一周，我来到杭州。&lt;/p&gt;
&lt;p&gt;我拖着行李刚走出火车，就被黑车党团团围住。好不容易挣脱了黑车党，打的士又陷入困境。一个人来到完全陌生的城市打拼，真的是很不容易。&lt;/p&gt;
&lt;p&gt;幸运的是，很快就在豆瓣找到了合租的人，并找到了一个不错的房子，虽然地段稍微有点远。不过以后可以考虑骑公共自行车上班，顺便锻炼身体。&lt;/p&gt;
&lt;p&gt;技术方面的话，自从5月底离开百度后就没怎么练了。再不练，武功就废了。坚持看完了SICP第二章，感到越来越吃力(实在太抽象了)，于是决定暂缓第三章的学习计划。考虑到淘宝大量使用JAVA,于是开始学习《JAVA编程思想》，想尽快入门JAVA。&lt;/p&gt;
&lt;p&gt;周末和向楠、倪灿在西湖旁边吃了个饭，聊了聊很多往事，感慨万千。&lt;/p&gt;
&lt;p&gt;下周一就要入职了，感觉压力很大。&lt;/p&gt;
&lt;p&gt;上路了，毕业生。&lt;/p&gt;
&lt;iframe height=498 width=510 src="http://player.youku.com/embed/XMzcwMzExNg==" frameborder=0 allowfullscreen&gt;&lt;/iframe&gt;</summary><category term="杭州"></category><category term="淘宝"></category></entry></feed>